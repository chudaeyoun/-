package com.example.demo.test.userimport com.fasterxml.jackson.databind.ObjectMapperimport org.junit.jupiter.api.Testimport org.springframework.beans.factory.annotation.Autowiredimport org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvcimport org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestimport org.springframework.http.MediaTypeimport org.springframework.test.web.servlet.MockMvcimport org.springframework.test.web.servlet.request.MockMvcRequestBuildersimport org.springframework.test.web.servlet.result.MockMvcResultMatchersimport org.springframework.test.web.servlet.result.MockMvcResultMatchers.contentimport org.springframework.test.web.servlet.result.MockMvcResultMatchers.status@AutoConfigureMockMvc@WebMvcTest(UserController::class)class UserControllerTest {    @Autowired    private lateinit var mockMvc: MockMvc    @Autowired    private lateinit var objectMapper: ObjectMapper    @Test    fun hello() {        mockMvc.perform(MockMvcRequestBuilders.get("/hello2"))            .andExpect(status().isOk)            .andExpect(content().string("hello"))    }    @Test    fun createUser_JOSN() {        val userJson = "{\"username\":\"chu\", \"password\":\"111\"}"        mockMvc.perform(            MockMvcRequestBuilders.post("/users/create")                .contentType(MediaType.APPLICATION_JSON)                .accept(MediaType.APPLICATION_JSON)                .content(userJson)        ).andExpect(status().isOk)            .andExpect(MockMvcResultMatchers.jsonPath("$.username").value("chu"))    }}