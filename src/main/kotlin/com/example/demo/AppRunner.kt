package com.example.demoimport com.example.demo.environment.BookRepositoryimport com.example.demo.evnet.MyEventimport org.springframework.beans.factory.annotation.Autowiredimport org.springframework.beans.factory.annotation.Valueimport org.springframework.boot.ApplicationArgumentsimport org.springframework.boot.ApplicationRunnerimport org.springframework.context.ApplicationContextimport org.springframework.context.ApplicationEventPublisherimport org.springframework.context.MessageSourceimport org.springframework.stereotype.Componentimport java.util.*@Componentclass AppRunner : ApplicationRunner{    @Autowired    lateinit var ctx : ApplicationContext    @Autowired    lateinit var bookRepository: BookRepository    @Autowired    lateinit var messageSource: MessageSource    @Autowired    lateinit var applicationEventPublisher: ApplicationEventPublisher    @Value("\${app.name}")    lateinit var appName: String    override fun run(args: ApplicationArguments?) {        val environment = ctx.environment        println(environment.activeProfiles.contentToString())        println(environment.defaultProfiles.contentToString())        println(bookRepository)        println(environment.getProperty("app.name"))        println(environment.getProperty("app.about"))        println(appName)        println(messageSource.javaClass)        println(Locale.getDefault())        println(messageSource.getMessage("greeting", arrayOf("chu"), Locale.KOREA))        println(messageSource.getMessage("greeting", arrayOf("chu"), Locale.US))    //        while(true) {//            println(messageSource.getMessage("greeting", arrayOf("chu"), Locale.KOREA))//            println(messageSource.getMessage("greeting", arrayOf("chu"), Locale.US))//            Thread.sleep(1001)//        }        applicationEventPublisher.publishEvent(MyEvent(this, 100))    }}